package com.ajepst.callme;

import java.io.InputStream;
import java.util.ArrayList;

import android.content.ContentResolver;
import android.content.ContentUris;
import android.content.Context;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.provider.ContactsContract;
import android.provider.ContactsContract.Contacts;
import android.util.Log;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.GridView;
import android.widget.ImageView;

public class ImageAdapter extends BaseAdapter {
    private Context mContext;
	private static final String TAG = "ImageAdapter";

    public ImageAdapter(Context c) {
        mContext = c;
        
        
		String[] projection = new String[] {
				ContactsContract.Contacts._ID,
				ContactsContract.Contacts.LOOKUP_KEY,
				ContactsContract.Contacts.DISPLAY_NAME,
				ContactsContract.Contacts.PHOTO_ID, };

		Uri contacts = ContactsContract.Contacts.CONTENT_URI;
		Cursor cur = managedQuery(contacts, projection, "Starred = 1",
				null, null);
		Bitmap[] bitmaps = getColumnData(cur);
		

    }
    
    private Bitmap[] getColumnData(Cursor cur){ 
        ArrayList<Bitmap> bitmaps = new ArrayList<Bitmap>();
    	Log.d(TAG, "getting data");
    	if (cur.moveToFirst()) {

            String name; 
            Long id;
           // String phoneNumber; 
            int nameColumn = cur.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME); 
            int picColumn = cur.getColumnIndex(ContactsContract.Contacts.PHOTO_ID);
            int idColumn = cur.getColumnIndex(ContactsContract.Contacts._ID);
            String imagePath; 
        
            do {
                // Get the field values
                name = cur.getString(nameColumn);
                imagePath = cur.getString(picColumn);
                id =  cur.getLong(idColumn);
               Log.d(TAG, "starred name: " + name);
               Log.d(TAG, "image: " + imagePath);
               Uri contentDirUri = ContactsContract.Contacts.CONTENT_URI;
			Uri contactUri = ContentUris.withAppendedId(contentDirUri, id);
               ContentResolver resolver = getContentResolver();
               InputStream photoDataStream = Contacts.openContactPhotoInputStream(resolver,contactUri);
               Bitmap photo = BitmapFactory.decodeStream(photoDataStream);
               if (photo != null)
            	   bitmaps.add(photo);
            } while (cur.moveToNext());
            return (Bitmap[]) bitmaps.toArray();
        }
		return null;
    }

    public int getCount() {
        return mThumbIds.length;
    }

    public Object getItem(int position) {
        return null;
    }

    public long getItemId(int position) {
        return 0;
    }

    // create a new ImageView for each item referenced by the Adapter
    public View getView(int position, View convertView, ViewGroup parent) {
        ImageView imageView;
        if (convertView == null) {  // if it's not recycled, initialize some attributes
            imageView = new ImageView(mContext);
            imageView.setLayoutParams(new GridView.LayoutParams(85, 85));
            imageView.setScaleType(ImageView.ScaleType.CENTER_CROP);
            imageView.setPadding(8, 8, 8, 8);
        } else {
            imageView = (ImageView) convertView;
        }

        imageView.setImageResource(mThumbIds[position]);
        return imageView;
    }

    // references to our images
    private Integer[] mThumbIds = {
            R.drawable.sample_2, R.drawable.sample_3,
            R.drawable.sample_4, R.drawable.sample_5,
            R.drawable.sample_6, R.drawable.sample_7,
            R.drawable.sample_0, R.drawable.sample_1,
            R.drawable.sample_2, R.drawable.sample_3,
            R.drawable.sample_4, R.drawable.sample_5,
            R.drawable.sample_6, R.drawable.sample_7,
            R.drawable.sample_0, R.drawable.sample_1,
            R.drawable.sample_2, R.drawable.sample_3,
            R.drawable.sample_4, R.drawable.sample_5,
            R.drawable.sample_6, R.drawable.sample_7
    };
}